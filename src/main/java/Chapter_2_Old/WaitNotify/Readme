В Java с каждым объектом ассоциирован монитор.
Состояние монитора - это
1) логический флажок - занято или нет
2) wait-set - множество "пассивных" потоков ждущих пробуждения (CPU не загружают)
2) blocked-set - множество "активных" потоков ждущих только возможности захватить монитор (CPU не загружают)

Метод notify() перемещает один из потоков из wait-set в blocked-set.
Метод notifyAll() перемещает все потоки из wait-set в blocked-set.

Поток помещается в wait-set объекта когда:
 - сам вызывает метод wait у объекта
Поток помещается в blocked-set объекта когда
 - вызывает synchronized метод/секцию, а монитор занят
 - он счастливчик и os/jvm перемещает его из wait-set в blocked-set по notify(), а монитор занят
 - по notifyAll() его среди всех остальных перемещают в blocked-set, а монитор занят
 - он вошел в wait-set через использования одной из версий wait(...) с таймаутом и таймаут истек
 - сработал spirious wakeup и поток выбросило из wait-set в blocked-set

Спецификация не гарантирует никакого порядка
 - ни при выборе по notify() одного из wait-set в blocked-set
 - ни при захвате монитора потоками из blocked-set

Но в реальности os/jvm реализует какой-то порядок.